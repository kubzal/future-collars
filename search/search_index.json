{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":[" "]},"docs":[{"location":"","title":"Witaj, w\u0119drowcze! \ud83d\udc4b","text":"<p>Mi\u0142o mi, \u017ce tu dotar\u0142e\u015b! Czy to przez labirynt kodu, czy g\u00f3rzyste szlaki algorytm\u00f3w \u2013 uda\u0142o Ci si\u0119! \ud83c\udf1f Znajdziesz tutaj r\u00f3\u017cnorodne notatki, materia\u0142y do zaj\u0119\u0107 i tajemne skrypty dotycz\u0105ce Pythona, machine learningu oraz data science. </p> <p>Przygotuj si\u0119 na wypraw\u0119 przez funkcje, zmienne, modele i dane, bo ta baza wiedzy to nie zwyk\u0142y folder na pliki \u2013 to skarbnica m\u0105dro\u015bci, kt\u00f3ra pomo\u017ce Ci zosta\u0107 mistrzem kodu! \ud83d\udcbb\u2728</p> <p>Czuj si\u0119 jak u siebie, klikaj, przegl\u0105daj i nie zapomnij o zrobieniu kawy... bo przy Pythonie przyda Ci si\u0119 dodatkowa energia! \u2615\ud83d\udc0d</p>"},{"location":"HTML/","title":"HTML \u2013 J\u0119zyk Internetu! \ud83c\udf10","text":"<p>HTML (HyperText Markup Language) to podstawowy j\u0119zyk, kt\u00f3ry pozwala nam tworzy\u0107 strony internetowe. To taki przepis na to, jak ma wygl\u0105da\u0107 strona, gdzie co ma by\u0107 i jak to pouk\u0142ada\u0107. HTML nie jest j\u0119zykiem programowania, to j\u0119zyk opisu struktury \u2013 m\u00f3wi przegl\u0105darce, co wy\u015bwietla\u0107 i w jakiej kolejno\u015bci. Bez HTML-a internet wygl\u0105da\u0142by jak sterta plik\u00f3w tekstowych bez \u0142adu i sk\u0142adu!</p> <p>Na pocz\u0105tek przyjrzyjmy si\u0119 podstawowemu szablonowi strony HTML:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Moja Strona&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Witaj na mojej stronie!&lt;/h1&gt;\n    &lt;p&gt;To jest moja pierwsza strona w HTML. Juhu!&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"HTML/#co-oznaczaja-te-wszystkie-tajemnicze-tagi","title":"Co oznaczaj\u0105 te wszystkie tajemnicze tagi? \ud83d\udc40","text":"<ul> <li><code>&lt;!DOCTYPE html&gt;</code> \u2013 M\u00f3wi przegl\u0105darce, \u017ce u\u017cywamy HTML5, najnowszej wersji j\u0119zyka HTML.</li> <li><code>&lt;html&gt;</code> \u2013 Otwiera g\u0142\u00f3wny blok strony HTML.</li> <li><code>&lt;head&gt;</code> \u2013 To miejsce na metadane, czyli informacje o stronie, takie jak tytu\u0142 (<code>&lt;title&gt;</code>) i r\u00f3\u017cne ustawienia.</li> <li><code>&lt;title&gt;</code> \u2013 Tytu\u0142 strony wy\u015bwietlany na karcie przegl\u0105darki.</li> <li><code>&lt;body&gt;</code> \u2013 Tutaj umieszczasz wszystko, co chcesz, aby pojawi\u0142o si\u0119 na stronie: teksty, zdj\u0119cia, listy, nag\u0142\u00f3wki itd.</li> </ul>"},{"location":"HTML/01_podstawy/","title":"Podstawy HTML","text":""},{"location":"HTML/01_podstawy/#podstawowe-tagi-html-elementy-bez-ktorych-strona-nie-istnieje","title":"Podstawowe Tagi HTML \u2013 Elementy, bez kt\u00f3rych strona nie istnieje! \ud83e\uddf1","text":""},{"location":"HTML/01_podstawy/#1-nagowki-h1-h2-h6","title":"1. Nag\u0142\u00f3wki (<code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code> ... <code>&lt;h6&gt;</code>)","text":"<p>Nag\u0142\u00f3wki to tytu\u0142y i podtytu\u0142y na stronie. HTML oferuje sze\u015b\u0107 poziom\u00f3w nag\u0142\u00f3wk\u00f3w, od <code>&lt;h1&gt;</code> (najwa\u017cniejszy, najwi\u0119kszy) do <code>&lt;h6&gt;</code> (najmniej wa\u017cny, najmniejszy).</p> <pre><code>&lt;h1&gt;To jest g\u0142\u00f3wny nag\u0142\u00f3wek&lt;/h1&gt;\n&lt;h2&gt;A to jest podtytu\u0142&lt;/h2&gt;\n</code></pre>"},{"location":"HTML/01_podstawy/#2-paragraf-p","title":"2. Paragraf (<code>&lt;p&gt;</code>)","text":"<p>Dla zwyk\u0142ego tekstu u\u017cywamy tagu <code>&lt;p&gt;</code>. Ka\u017cdy paragraf jest wy\u015bwietlany w osobnej linii.</p> <pre><code>&lt;p&gt;HTML to podstawowy j\u0119zyk tworzenia stron internetowych.&lt;/p&gt;\n</code></pre>"},{"location":"HTML/01_podstawy/#3-link-a","title":"3. Link (<code>&lt;a&gt;</code>)","text":"<p>Chcesz, \u017ceby u\u017cytkownik m\u00f3g\u0142 przej\u015b\u0107 na inn\u0105 stron\u0119? U\u017cyj tagu <code>&lt;a&gt;</code>. Pami\u0119taj, aby poda\u0107 adres w atrybucie <code>href</code>.</p> <pre><code>&lt;a href=\"https://www.example.com\"&gt;Kliknij, aby odwiedzi\u0107 przyk\u0142ad!&lt;/a&gt;\n</code></pre>"},{"location":"HTML/01_podstawy/#4-obraz-img","title":"4. Obraz (<code>&lt;img&gt;</code>)","text":"<p>Aby doda\u0107 obrazek, u\u017cywamy <code>&lt;img&gt;</code> i ustawiamy jego \u017ar\u00f3d\u0142o (adres obrazka) za pomoc\u0105 <code>src</code>.</p> <pre><code>&lt;img src=\"obrazek.jpg\" alt=\"Opis obrazka\" width=\"300\"&gt;\n</code></pre>"},{"location":"HTML/01_podstawy/#5-lista-uporzadkowana-ul-i-elementy-listy-li","title":"5. Lista uporz\u0105dkowana (<code>&lt;ul&gt;</code>) i elementy listy (<code>&lt;li&gt;</code>)","text":"<p>Listy uporz\u0105dkowane, czyli wypunktowane, tworzymy za pomoc\u0105 <code>&lt;ul&gt;</code>, a ka\u017cdy element listy za pomoc\u0105 <code>&lt;li&gt;</code>.</p> <pre><code>&lt;ul&gt;\n    &lt;li&gt;Jab\u0142ka&lt;/li&gt;\n    &lt;li&gt;Banany&lt;/li&gt;\n    &lt;li&gt;Pomara\u0144cze&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>"},{"location":"HTML/01_podstawy/#6-tabela-table","title":"6. Tabela (<code>&lt;table&gt;</code>)","text":"<p>Je\u015bli potrzebujesz tabelki do danych, u\u017cyj tagu <code>&lt;table&gt;</code>. Wewn\u0105trz mamy tagi na rz\u0119dy <code>&lt;tr&gt;</code>, kom\u00f3rki nag\u0142\u00f3wkowe <code>&lt;th&gt;</code>, oraz zwyk\u0142e kom\u00f3rki <code>&lt;td&gt;</code>.</p> <pre><code>&lt;table border=\"1\"&gt;\n    &lt;tr&gt;\n        &lt;th&gt;Imi\u0119&lt;/th&gt;\n        &lt;th&gt;Wiek&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Kuba&lt;/td&gt;\n        &lt;td&gt;30&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Ola&lt;/td&gt;\n        &lt;td&gt;25&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>"},{"location":"HTML/01_podstawy/#7-przerwa-br","title":"7. Przerwa (<code>&lt;br&gt;</code>)","text":"<p>Tag <code>&lt;br&gt;</code> dodaje przerw\u0119, prze\u0142amuj\u0105c lini\u0119 \u2013 jak wci\u015bni\u0119cie \"Enter\" na klawiaturze.</p> <pre><code>&lt;p&gt;To jest tekst.&lt;br&gt;Przeszed\u0142em do nowej linii.&lt;/p&gt;\n</code></pre>"},{"location":"HTML/01_podstawy/#8-font-niestandardowe-kolory-i-rozmiary","title":"8. Font (niestandardowe kolory i rozmiary)","text":"<p>Tag <code>&lt;font&gt;</code> by\u0142 kiedy\u015b u\u017cywany do ustawiania koloru i rozmiaru tekstu, ale w nowoczesnym HTML u\u017cywamy CSS do stylowania. Mimo to, warto zna\u0107, \u017ce kiedy\u015b dzia\u0142a\u0142 tak:</p> <pre><code>&lt;font color=\"blue\" size=\"4\"&gt;To jest tekst w niebieskim kolorze.&lt;/font&gt;\n</code></pre>"},{"location":"HTML/01_podstawy/#podsumowanie","title":"Podsumowanie:","text":"<ul> <li>Nag\u0142\u00f3wki (<code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code>...) \u2013 Tworz\u0105 hierarchi\u0119 tytu\u0142\u00f3w.</li> <li>Paragraf (<code>&lt;p&gt;</code>) \u2013 Zwyk\u0142y tekst.</li> <li>Link (<code>&lt;a href=\"...\"&gt;</code>) \u2013 Klikalny odno\u015bnik.</li> <li>Obraz (<code>&lt;img src=\"...\"&gt;</code>) \u2013 Dodaje obrazek.</li> <li>Lista (<code>&lt;ul&gt;</code> i <code>&lt;li&gt;</code>) \u2013 Tworzy listy wypunktowane.</li> <li>Tabela (<code>&lt;table&gt;</code>) \u2013 Do prezentowania danych w wierszach i kolumnach.</li> <li>Przerwa (<code>&lt;br&gt;</code>) \u2013 Prze\u0142amanie linii.</li> </ul> <p>HTML to prosty, ale pot\u0119\u017cny spos\u00f3b na budowanie stron internetowych. Z tymi podstawowymi elementami mo\u017cesz stworzy\u0107 struktur\u0119 swojej strony, a potem wystylizowa\u0107 j\u0105 i urozmaici\u0107, jak tylko sobie wymarzysz! \ud83c\udf1f</p>"},{"location":"HTML/02_formularze/","title":"Formularze","text":""},{"location":"HTML/02_formularze/#formularze-interakcja-z-uzytkownikiem","title":"Formularze \u2013 interakcja z u\u017cytkownikiem! \ud83d\udccb\ud83d\udc8c","text":"<p>Formularze w HTML to spos\u00f3b, aby uzyska\u0107 dane od u\u017cytkownika \u2013 mog\u0105 to by\u0107 informacje kontaktowe, komentarze, dane do logowania i wiele wi\u0119cej. Formularze sk\u0142adaj\u0105 si\u0119 z r\u00f3\u017cnych p\u00f3l, przycisk\u00f3w i element\u00f3w, kt\u00f3re u\u017cytkownik wype\u0142nia, a potem wysy\u0142a za pomoc\u0105 przycisku.</p> <p>Przyk\u0142adowy formularz:</p> <pre><code>&lt;form action=\"/submit_form\" method=\"post\"&gt;\n    &lt;label for=\"name\"&gt;Imi\u0119:&lt;/label&gt;\n    &lt;input type=\"text\" id=\"name\" name=\"name\" required&gt;&lt;br&gt;&lt;br&gt;\n\n    &lt;label for=\"email\"&gt;Email:&lt;/label&gt;\n    &lt;input type=\"email\" id=\"email\" name=\"email\" required&gt;&lt;br&gt;&lt;br&gt;\n\n    &lt;label for=\"message\"&gt;Wiadomo\u015b\u0107:&lt;/label&gt;&lt;br&gt;\n    &lt;textarea id=\"message\" name=\"message\" rows=\"4\" cols=\"50\"&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;\n\n    &lt;input type=\"submit\" value=\"Wy\u015blij\"&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"HTML/02_formularze/#co-sie-tu-dzieje","title":"Co si\u0119 tu dzieje? \ud83d\udce5","text":"<ul> <li> <p><code>&lt;form action=\"...\" method=\"...\"</code> \u2013 <code>&lt;form&gt;</code> otwiera formularz. <code>action</code> wskazuje, gdzie dane maj\u0105 by\u0107 wys\u0142ane, a <code>method</code> (zwykle <code>post</code> lub <code>get</code>) m\u00f3wi, w jaki spos\u00f3b dane maj\u0105 by\u0107 przes\u0142ane.</p> </li> <li> <p><code>&lt;input type=\"text\"&gt;</code> \u2013 To pole tekstowe do wpisywania pojedynczej linii tekstu, np. imienia.</p> </li> <li> <p><code>&lt;input type=\"email\"&gt;</code> \u2013 Pole do wpisania adresu e-mail. Przegl\u0105darka sprawdzi, czy to prawid\u0142owy adres.</p> </li> <li> <p><code>&lt;textarea&gt;</code> \u2013 Wi\u0119ksze pole tekstowe na d\u0142u\u017csz\u0105 wiadomo\u015b\u0107. Mo\u017cesz ustawi\u0107 ilo\u015b\u0107 wierszy i kolumn (<code>rows</code> i <code>cols</code>).</p> </li> <li> <p><code>&lt;input type=\"submit\"&gt;</code> \u2013 Przycisk wysy\u0142aj\u0105cy formularz, dzi\u0119ki kt\u00f3remu dane zostan\u0105 przes\u0142ane pod adres podany w <code>action</code>.</p> </li> </ul> <p>Formularze s\u0105 niesamowicie elastyczne \u2013 mo\u017cna dodawa\u0107 pola wyboru, listy rozwijane i wiele innych element\u00f3w, by dostosowa\u0107 je do potrzeb. Dzi\u0119ki nim u\u017cytkownicy mog\u0105 wysy\u0142a\u0107 dane, a Ty mo\u017cesz je odbiera\u0107 i przetwarza\u0107.</p>"},{"location":"HTML/03_css/","title":"Arkusze styl\u00f3w","text":""},{"location":"HTML/03_css/#css-styl-i-wyglad-twojej-strony","title":"CSS \u2013 Styl i wygl\u0105d Twojej strony! \ud83c\udfa8\u2728","text":"<p>HTML tworzy struktur\u0119 strony, ale to CSS (Cascading Style Sheets) sprawia, \u017ce wygl\u0105da ona pi\u0119knie i profesjonalnie. CSS to j\u0119zyk stylowania, kt\u00f3ry pozwala na kontrolowanie kolor\u00f3w, czcionek, uk\u0142ad\u00f3w i innych wizualnych element\u00f3w Twojej strony. Dzi\u0119ki CSS mo\u017cesz przekszta\u0142ci\u0107 surowy HTML w prawdziwe dzie\u0142o sztuki!</p>"},{"location":"HTML/03_css/#jak-dziaa-css","title":"Jak dzia\u0142a CSS? \ud83c\udfad","text":"<p>CSS dzia\u0142a jak \u201eubranie\u201d dla HTML \u2013 m\u00f3wisz przegl\u0105darce, jak ka\u017cdy element ma wygl\u0105da\u0107, definiuj\u0105c zasady dla wybranych tag\u00f3w. Te zasady sk\u0142adaj\u0105 si\u0119 z selektor\u00f3w (czyli tego, co chcesz wystylizowa\u0107) i deklaracji (czyli co chcesz z tym zrobi\u0107).</p> <p>Przyk\u0142ad: <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;style&gt;\n        body {\n            background-color: lightblue;\n            font-family: Arial, sans-serif;\n        }\n\n        h1 {\n            color: darkblue;\n            text-align: center;\n        }\n\n        p {\n            color: darkgray;\n            font-size: 18px;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Witaj na mojej pi\u0119knej stronie!&lt;/h1&gt;\n    &lt;p&gt;CSS sprawia, \u017ce HTML wygl\u0105da po prostu cudownie.&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p>"},{"location":"HTML/03_css/#skadnia-css-jak-to-dziaa","title":"Sk\u0142adnia CSS \u2013 Jak to dzia\u0142a?","text":"<p>CSS sk\u0142ada si\u0119 z selektor\u00f3w (czyli element\u00f3w, kt\u00f3re chcemy stylizowa\u0107) i deklaracji (co dok\u0142adnie chcemy zmieni\u0107).</p> <pre><code>h1 {\n    color: darkblue;\n    text-align: center;\n}\n</code></pre> <ul> <li><code>h1</code> \u2013 Selektor wskazuj\u0105cy, \u017ce chcemy zmienia\u0107 styl nag\u0142\u00f3wk\u00f3w <code>&lt;h1&gt;</code>.</li> <li><code>color: darkblue;</code> \u2013 Deklaracja, kt\u00f3ra ustawia kolor tekstu na ciemnoniebieski.</li> <li><code>text-align: center;</code> \u2013 Ustawia wyr\u00f3wnanie tekstu do \u015brodka.</li> </ul>"},{"location":"HTML/03_css/#najwazniejsze-wasciwosci-css-ktore-warto-znac","title":"Najwa\u017cniejsze w\u0142a\u015bciwo\u015bci CSS, kt\u00f3re warto zna\u0107 \ud83d\udee0\ufe0f","text":"<ol> <li> <p>Kolor \u2013 Za pomoc\u0105 <code>color</code> ustawiamy kolor tekstu, a <code>background-color</code> ustala kolor t\u0142a.</p> <pre><code>p {\n    color: #333333;  /* kolor tekstu */\n    background-color: #f0f0f0;  /* kolor t\u0142a */\n}\n</code></pre> </li> <li> <p>Czcionki \u2013 <code>font-family</code> wybiera czcionk\u0119, <code>font-size</code> ustala rozmiar tekstu, a <code>font-weight</code> pozwala na zmian\u0119 grubo\u015bci.</p> <pre><code>body {\n    font-family: Arial, sans-serif;\n    font-size: 16px;\n    font-weight: bold;\n}\n</code></pre> </li> <li> <p>Wyr\u00f3wnanie \u2013 <code>text-align</code> pozwala ustawi\u0107 wyr\u00f3wnanie tekstu (lewo, prawo, \u015brodek).</p> <pre><code>h1 {\n    text-align: center;\n}\n</code></pre> </li> <li> <p>Marginesy i odst\u0119py \u2013 <code>margin</code> kontroluje odst\u0119p na zewn\u0105trz elementu, a <code>padding</code> na wewn\u0105trz.</p> <pre><code>.box {\n    margin: 20px;\n    padding: 15px;\n}\n</code></pre> </li> <li> <p>Obramowania \u2013 Dzi\u0119ki <code>border</code> mo\u017cesz doda\u0107 ramk\u0119 do elementu.</p> <pre><code>img {\n    border: 2px solid black;\n}\n</code></pre> </li> </ol>"},{"location":"HTML/03_css/#gdzie-umiescic-css","title":"Gdzie umie\u015bci\u0107 CSS? \ud83c\udfe0","text":"<p>CSS mo\u017cna dodawa\u0107 na trzy sposoby:</p> <ol> <li>Style wewn\u0119trzne \u2013 Bezpo\u015brednio w kodzie HTML, wewn\u0105trz <code>&lt;style&gt;</code> w <code>&lt;head&gt;</code> (tak jak w przyk\u0142adzie).</li> <li>Style zewn\u0119trzne \u2013 W osobnym pliku <code>.css</code>, kt\u00f3ry jest pod\u0142\u0105czony do HTML za pomoc\u0105 <code>&lt;link&gt;</code>.     <pre><code>&lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n</code></pre></li> <li>Style liniowe \u2013 Wewn\u0105trz konkretnego tagu HTML, za pomoc\u0105 <code>style</code>, np. <code>&lt;p style=\"color: red;\"&gt;</code>.</li> </ol>"},{"location":"HTML/03_css/#podsumowanie","title":"Podsumowanie","text":"<p>CSS daje Ci pe\u0142n\u0105 kontrol\u0119 nad wygl\u0105dem Twojej strony. Dzi\u0119ki niemu mo\u017cesz zmienia\u0107 kolory, czcionki, rozmiary i po\u0142o\u017cenie element\u00f3w \u2013 wszystko po to, aby stworzy\u0107 stron\u0119, kt\u00f3ra nie tylko dzia\u0142a, ale te\u017c wygl\u0105da niesamowicie! \ud83c\udf1f</p>"},{"location":"HTML/04_spectre/","title":"Frameworki CSS","text":""},{"location":"HTML/04_spectre/#frameworki-css-szybka-droga-do-pieknych-stron","title":"Frameworki CSS \u2013 szybka droga do pi\u0119knych stron! \ud83c\udfa8\ud83d\ude80","text":"<p>Pisanie styl\u00f3w od podstaw jest \u015bwietne, ale czasami potrzebujemy czego\u015b, co przyspieszy prac\u0119 i da nam gotowy, profesjonalny wygl\u0105d bez godzin sp\u0119dzonych na stylowaniu. Tutaj wkraczaj\u0105 zewn\u0119trzne frameworki CSS \u2013 zbiory gotowych styl\u00f3w, kt\u00f3re mo\u017cemy zaimportowa\u0107 i u\u017cy\u0107 od razu.</p>"},{"location":"HTML/04_spectre/#przykad-spectrecss","title":"Przyk\u0142ad: Spectre.css","text":"<p>Spectre.css to lekki framework CSS, kt\u00f3ry oferuje minimalistyczny, nowoczesny wygl\u0105d. Jest \u015bwietny do szybkiego budowania eleganckich stron bez zb\u0119dnych dodatk\u00f3w. Zawiera stylizacj\u0119 dla przycisk\u00f3w, formularzy, tabel, siatki layoutu i innych element\u00f3w, co pozwala \u0142atwo tworzy\u0107 sp\u00f3jn\u0105 stron\u0119.</p>"},{"location":"HTML/04_spectre/#jak-uzywac-spectrecss","title":"Jak u\u017cywa\u0107 Spectre.css? \ud83d\udce6","text":"<ol> <li> <p>Dodanie frameworka \u2013 Aby zacz\u0105\u0107, wystarczy doda\u0107 Spectre.css do swojego projektu. Mo\u017cesz u\u017cy\u0107 linku CDN w sekcji <code>&lt;head&gt;</code>:</p> <pre><code>&lt;link rel=\"stylesheet\" href=\"https://unpkg.com/spectre.css/dist/spectre.min.css\"&gt;\n</code></pre> </li> <li> <p>Korzystanie z gotowych klas \u2013 Framework dostarcza wiele gotowych klas, kt\u00f3re wystarczy doda\u0107 do element\u00f3w HTML. Poni\u017cej kilka przyk\u0142ad\u00f3w:</p> <ul> <li> <p>Przyciski:   <pre><code>&lt;button class=\"btn\"&gt;Zwyk\u0142y przycisk&lt;/button&gt;\n&lt;button class=\"btn btn-primary\"&gt;Przycisk g\u0142\u00f3wny&lt;/button&gt;\n&lt;button class=\"btn btn-error\"&gt;Przycisk z b\u0142\u0119dem&lt;/button&gt;\n</code></pre></p> </li> <li> <p>Siatka layoutu:   Spectre u\u017cywa klas <code>.columns</code> i <code>.column</code> do tworzenia siatki opartej na kolumnach, dzi\u0119ki czemu \u0142atwo rozmie\u015bcisz elementy na stronie.   <pre><code>&lt;div class=\"columns\"&gt;\n    &lt;div class=\"column col-6\"&gt;Lewa kolumna (50%)&lt;/div&gt;\n    &lt;div class=\"column col-6\"&gt;Prawa kolumna (50%)&lt;/div&gt;\n&lt;/div&gt;\n</code></pre></p> </li> <li> <p>Formularze:   Spectre oferuje r\u00f3wnie\u017c klasy do stylizacji formularzy, co pozwala szybko zbudowa\u0107 atrakcyjne, responsywne formularze.   <pre><code>&lt;form&gt;\n    &lt;div class=\"form-group\"&gt;\n        &lt;label for=\"name\"&gt;Imi\u0119&lt;/label&gt;\n        &lt;input type=\"text\" class=\"form-input\" id=\"name\" placeholder=\"Wpisz swoje imi\u0119\"&gt;\n    &lt;/div&gt;\n    &lt;button class=\"btn btn-primary\"&gt;Wy\u015blij&lt;/button&gt;\n&lt;/form&gt;\n</code></pre></p> </li> </ul> </li> </ol> <p>Spectre.css to tylko jeden z wielu framework\u00f3w CSS, ale jego lekko\u015b\u0107 i prostota sprawiaj\u0105, \u017ce jest \u015bwietnym wyborem na pocz\u0105tek. Dzi\u0119ki niemu mo\u017cesz stworzy\u0107 nowoczesn\u0105, responsywn\u0105 stron\u0119 w bardzo kr\u00f3tkim czasie \u2013 i przy minimalnym wysi\u0142ku!</p>"},{"location":"git/","title":"Wst\u0119p","text":""},{"location":"git/#git-twoj-superbohater-od-wersji","title":"Git \u2013 Tw\u00f3j superbohater od wersji! \ud83e\uddb8\u200d\u2642\ufe0f","text":"<p>Git to taki Batman \u015bwiata programowania. Pomaga Ci zarz\u0105dza\u0107 wersjami Twojego kodu, \u017ceby\u015b nie musia\u0142 nazywa\u0107 plik\u00f3w \u201eprojekt_FINAL_Ostateczny_FINA\u0141v2.zip\u201d. Dzi\u0119ki Gitowi mo\u017cesz cofa\u0107 zmiany, por\u00f3wnywa\u0107 wersje i pracowa\u0107 z zespo\u0142em, nie wpadaj\u0105c w chaos. A teraz czas pozna\u0107 najwa\u017cniejsze polecenia, \u017ceby\u015b i Ty m\u00f3g\u0142 poczu\u0107 si\u0119 jak mistrz wersji! \u26a1</p>"},{"location":"git/01_podstawy/","title":"Podstawy","text":""},{"location":"git/01_podstawy/#git-twoj-superbohater-od-wersji","title":"Git \u2013 Tw\u00f3j superbohater od wersji! \ud83e\uddb8\u200d\u2642\ufe0f","text":"<p>Git to taki Batman \u015bwiata programowania. Pomaga Ci zarz\u0105dza\u0107 wersjami Twojego kodu, \u017ceby\u015b nie musia\u0142 nazywa\u0107 plik\u00f3w \u201eprojekt_FINAL_Ostateczny_FINA\u0141v2.zip\u201d. Dzi\u0119ki Gitowi mo\u017cesz cofa\u0107 zmiany, por\u00f3wnywa\u0107 wersje i pracowa\u0107 z zespo\u0142em, nie wpadaj\u0105c w chaos. A teraz czas pozna\u0107 najwa\u017cniejsze polecenia, \u017ceby\u015b i Ty m\u00f3g\u0142 poczu\u0107 si\u0119 jak mistrz wersji! \u26a1</p>"},{"location":"git/01_podstawy/#staging-i-commit-przystanek-i-podpis","title":"Staging i Commit \u2013 przystanek i podpis! \ud83d\udcdd","text":"<p>Wyobra\u017a sobie, \u017ce pracujesz nad kodem i chcesz zapisa\u0107 pewien fragment swojej pracy, ale jeszcze nie odda\u0107 go \u015bwiatu (czyli nie zatwierdzi\u0107 w repo). Staging to takie miejsce, gdzie mo\u017cesz przygotowa\u0107 zmiany \u2013 jakby\u015b uk\u0142ada\u0142 sk\u0142adniki na kanapce przed w\u0142o\u017ceniem do piekarnika.</p> <p>Przyk\u0142ad: <pre><code>git add nazwa_pliku.py  # Wk\u0142adasz plik do \"piekarnika\", czyli staging area.\n</code></pre></p> <p>A teraz commit to taki oficjalny \u201eklik\u201d \u2013 zapisujesz swoje zmiany, nadajesz im etykietk\u0119 (komentarz), \u017ceby nie zapomnie\u0107, co zrobi\u0142e\u015b, i bum! Gotowe!</p> <pre><code>git commit -m \"Doda\u0142em now\u0105 funkcj\u0119 do pieczenia kanapek!\"\n</code></pre> <p>Zapisane! Mo\u017cesz teraz wr\u00f3ci\u0107 do tej wersji w ka\u017cdej chwili.</p>"},{"location":"git/01_podstawy/#branch-twoje-wasne-laboratorium-eksperymentow","title":"Branch \u2013 Twoje w\u0142asne laboratorium eksperyment\u00f3w! \ud83e\uddea","text":"<p>Branch to ga\u0142\u0105\u017a, na kt\u00f3rej mo\u017cesz eksperymentowa\u0107 bez niszczenia g\u0142\u00f3wnego projektu. Chcesz spr\u00f3bowa\u0107 nowych rzeczy, ale boisz si\u0119, \u017ce rozwalisz co\u015b wa\u017cnego? \u017baden problem! Tworzysz now\u0105 ga\u0142\u0105\u017a, robisz swoje eksperymenty, a jak si\u0119 uda, \u0142\u0105czysz to z g\u0142\u00f3wn\u0105 wersj\u0105.</p> <p>Przyk\u0142ad: <pre><code>git branch moja-nowa-galaz  # Tworzymy now\u0105 ga\u0142\u0105\u017a.\ngit checkout moja-nowa-galaz  # Przechodzimy na nasz\u0105 now\u0105 ga\u0142\u0105\u017a.\n</code></pre></p> <p>Teraz mo\u017cesz szale\u0107, a Tw\u00f3j g\u0142\u00f3wny kod jest bezpieczny jak w sejfie! \ud83d\udee1\ufe0f</p>"},{"location":"git/01_podstawy/#git-checkout-podroze-w-czasie","title":"Git Checkout \u2013 podr\u00f3\u017ce w czasie! \u23f3","text":"<p>Chcesz wr\u00f3ci\u0107 do poprzedniego commita? A mo\u017ce przerzuci\u0107 si\u0119 na inn\u0105 ga\u0142\u0105\u017a? Git checkout to Twoja maszyna czasu! Pozwala Ci przenosi\u0107 si\u0119 mi\u0119dzy wersjami kodu, jakby\u015b nigdy nie pope\u0142ni\u0142 tych fatalnych b\u0142\u0119d\u00f3w w nowej funkcji.</p> <pre><code>git checkout nazwa-innej-galazki  # Podr\u00f3\u017c na inn\u0105 ga\u0142\u0105\u017a.\n</code></pre> <p>Hop, zmiana! I jeste\u015b w innym miejscu w kodzie, bez \u017cadnych problem\u00f3w.</p>"},{"location":"git/01_podstawy/#git-diff-co-sie-zmienio","title":"Git Diff \u2013 co si\u0119 zmieni\u0142o?! \ud83d\udd0d","text":"<p>Chcesz sprawdzi\u0107, co dok\u0142adnie zmieni\u0142e\u015b w swoim kodzie? Git diff poka\u017ce Ci, jak detektyw, jakie linie kodu zosta\u0142y zmodyfikowane, dodane lub usuni\u0119te. To takie por\u00f3wnywanie starych i nowych wersji tekstu przed oddaniem pracy domowej.</p> <pre><code>git diff  # Poka\u017ce r\u00f3\u017cnice mi\u0119dzy obecn\u0105 wersj\u0105 a tym, co by\u0142o wcze\u015bniej.\n</code></pre> <p>Mo\u017cesz zobaczy\u0107 wszystko, co si\u0119 zmieni\u0142o \u2013 czy to dobrze, czy \u017ale... to ju\u017c inna sprawa! \ud83d\ude09</p>"},{"location":"git/01_podstawy/#git-log-historia-twoich-bohaterskich-czynow","title":"Git Log \u2013 historia Twoich bohaterskich czyn\u00f3w! \ud83d\udcdc","text":"<p>Potrzebujesz przypomnie\u0107 sobie, co robi\u0142e\u015b tydzie\u0144 temu? A mo\u017ce chcesz zobaczy\u0107 wszystkie commity w projekcie? Git log to Twoje osobiste archiwum. Ka\u017cdy commit, ka\u017cda zmiana, wszystko zapisane i czeka, a\u017c to przeczytasz.</p> <pre><code>git log  # Lista wszystkich commit\u00f3w, jak d\u0142uga historia Twojego \u017cycia!\n</code></pre> <p>Mo\u017cesz przegl\u0105da\u0107 ka\u017cdy commit i zobaczy\u0107, kto, kiedy i dlaczego co\u015b zmieni\u0142 \u2013 jak \u015bledztwo w kryminalnej zagadce kodu!</p>"},{"location":"git/01_podstawy/#podsumowanie","title":"Podsumowanie:","text":"<ul> <li>git add \u2013 Wrzu\u0107 pliki do staging area (czyli przygotuj zmiany do commita).</li> <li>git commit \u2013 Zatwierd\u017a zmiany z komentarzem.</li> <li>git branch \u2013 Stw\u00f3rz now\u0105 ga\u0142\u0105\u017a, \u017ceby eksperymentowa\u0107.</li> <li>git checkout \u2013 Prze\u0142\u0105cz si\u0119 na inn\u0105 wersj\u0119 kodu lub ga\u0142\u0105\u017a.</li> <li>git diff \u2013 Zobacz, co si\u0119 zmieni\u0142o mi\u0119dzy wersjami.</li> <li>git log \u2013 Przegl\u0105daj histori\u0119 commit\u00f3w.</li> </ul> <p>Teraz, uzbrojony w te narz\u0119dzia, mo\u017cesz \u015bmia\u0142o pracowa\u0107 nad swoim kodem, niczym programistyczny superbohater, ratuj\u0105cy dzie\u0144 i wersje! \ud83e\uddb8\u200d\u2640\ufe0f\ud83d\udc68\u200d\ud83d\udcbb</p>"},{"location":"git/01_podstawy/#notatki-dla-prowadzacego","title":"Notatki dla prowadz\u0105cego:","text":""},{"location":"git/01_podstawy/#1-co-to-jest-git","title":"1. Co to jest Git?","text":"<ul> <li>Rozproszony system kontroli wersji.</li> <li>Standard w wersjonowaniu kodu.</li> <li>Git \u2260 GitHub: GitHub to dostawca repozytori\u00f3w Git.</li> </ul>"},{"location":"git/01_podstawy/#2-problemy-rozwiazywane-przez-git","title":"2. Problemy rozwi\u0105zywane przez Git","text":"<ul> <li>Wsp\u00f3\u0142praca wielu os\u00f3b nad jednym projektem.</li> <li>Zarz\u0105dzanie wersjami programu.</li> <li>Odporno\u015b\u0107 na awarie lokalne i serwerowe.</li> <li>\u0141atwo\u015b\u0107 w scalaniu zmian.</li> <li>R\u00f3wnoleg\u0142a praca nad r\u00f3\u017cnymi funkcjami.</li> <li>Rozdzielenie wersji stabilnej od rozwojowej.</li> </ul>"},{"location":"git/01_podstawy/#3-praca-z-linia-komend","title":"3. Praca z lini\u0105 komend","text":"<ul> <li>Nawigacja w terminalu: <code>pwd</code>, <code>cd</code>, <code>ls -a</code> (Unix) / <code>DIR /a:h</code> (Windows).</li> <li>Tworzenie repozytorium: </li> <li><code>git init</code></li> <li>Sprawdzenie statusu: <code>git status</code></li> <li>Dodanie pierwszego pliku:</li> <li><code>touch pierwszy.txt</code></li> <li><code>git add pierwszy.txt</code></li> <li><code>git commit -m \"dodaj\u0119 plik pierwszy.txt\"</code></li> </ul>"},{"location":"git/01_podstawy/#4-commit-podstawy","title":"4. Commit - podstawy","text":"<ul> <li>Commit: Paczka zmian z identyfikatorem i komentarzem.</li> <li>Dwustopniowy proces:</li> <li><code>git add &lt;plik&gt;</code></li> <li><code>git commit -m \"&lt;komentarz&gt;\"</code></li> </ul>"},{"location":"git/01_podstawy/#5-operacje-na-plikach","title":"5. Operacje na plikach","text":"<ul> <li>Zmiana nazwy/pliku:</li> <li><code>git mv &lt;stara_nazwa&gt; &lt;nowa_nazwa&gt;</code></li> <li>Dodawanie katalogu:</li> <li><code>git add &lt;katalog&gt;</code></li> <li>Usuni\u0119cie pliku:</li> <li><code>git rm &lt;plik&gt;</code></li> </ul>"},{"location":"git/01_podstawy/#6-przywracanie-plikow-i-resetowanie-zmian","title":"6. Przywracanie plik\u00f3w i resetowanie zmian","text":"<ul> <li>Przywracanie do ostatniego commita: <code>git checkout &lt;plik&gt;</code></li> <li>Usuni\u0119cie ze staging: <code>git reset HEAD &lt;plik&gt;</code></li> </ul>"},{"location":"git/01_podstawy/#7-historia-zmian","title":"7. Historia zmian","text":"<ul> <li>Wy\u015bwietlanie log\u00f3w: <code>git log</code></li> <li>Historia dla konkretnego pliku: <code>git log -p &lt;plik&gt;</code></li> </ul>"},{"location":"git/01_podstawy/#8-cofanie-zmian","title":"8. Cofanie zmian","text":"<ul> <li>Zachowanie przysz\u0142ych commit\u00f3w: <code>git revert &lt;commit_ID&gt;</code></li> <li>Cofni\u0119cie si\u0119 do konkretnego commita: <code>git checkout &lt;commit_ID&gt;</code></li> </ul>"},{"location":"git/01_podstawy/#9-detach-head","title":"9. Detach HEAD","text":"<ul> <li>Wyja\u015bnienie: Cofanie do konkretnego commita od\u0142\u0105cza HEAD od ga\u0142\u0119zi. </li> </ul>"},{"location":"git/02_zaawansowany/","title":"Ga\u0142\u0119zie (Branche)","text":""},{"location":"git/02_zaawansowany/#git-tryb-zaawansowany-tajne-triki-superbohatera","title":"Git \u2013 Tryb zaawansowany: Tajne Triki Superbohatera! \ud83e\uddb8\u200d\u2642\ufe0f\ud83d\udcbb","text":"<p>Skoro ju\u017c znasz podstawy Gita, czas na bardziej zaawansowane sztuczki! Git to nie tylko zapis zmian, to prawdziwe narz\u0119dzie ninja, kt\u00f3re pozwala Ci bezpiecznie eksperymentowa\u0107, resetowa\u0107, a nawet cofa\u0107 czas (no, przynajmniej w kodzie). Oto kilka trik\u00f3w, kt\u00f3re wynios\u0105 Ci\u0119 na wy\u017cszy poziom! \ud83d\ude80</p>"},{"location":"git/02_zaawansowany/#szybkie-tworzenie-i-przeaczanie-sie-na-nowa-gaaz","title":"Szybkie tworzenie i prze\u0142\u0105czanie si\u0119 na now\u0105 ga\u0142\u0105\u017a \ud83c\udf3f","text":"<p>Pami\u0119tasz, jak m\u00f3wi\u0142em o branchach? Jest szybszy spos\u00f3b na stworzenie nowej ga\u0142\u0119zi i natychmiastowe prze\u0142\u0105czenie si\u0119 na ni\u0105. Zamiast tworzy\u0107 j\u0105 i potem si\u0119 przerzuca\u0107, mo\u017cesz to zrobi\u0107 w jednym ruchu:</p> <pre><code>git checkout -b moja-nowa-galaz  # Tworzy now\u0105 ga\u0142\u0105\u017a i od razu na ni\u0105 przechodzi.\n</code></pre> <p>Teraz masz now\u0105 ga\u0142\u0105\u017a w jednej komendzie. Mistrzostwo!</p>"},{"location":"git/02_zaawansowany/#resetowanie-staging-area-ups","title":"Resetowanie staging area \u2013 Ups! \ud83d\ude4a","text":"<p>Co\u015b wrzuci\u0142e\u015b do staging area, a teraz my\u015blisz: \"Oj, jednak tego nie chcia\u0142em\"? \u017baden problem! Mo\u017cesz cofn\u0105\u0107 dodanie pliku do staging area bez niszczenia kodu.</p> <pre><code>git reset nazwa_pliku.py  # Cofasz plik ze staging area, ale nie usuwasz zmian w nim.\n</code></pre> <p>I po k\u0142opocie! Plik wraca do swojej pierwotnej postaci i czeka na Twoje decyzje.</p>"},{"location":"git/02_zaawansowany/#checkout-na-konkretny-commit-podroz-w-czasie","title":"Checkout na konkretny commit \u2013 Podr\u00f3\u017c w czasie! \u23f3","text":"<p>Chcesz cofn\u0105\u0107 si\u0119 do konkretnego momentu w historii projektu? Mo\u017cesz to zrobi\u0107 za pomoc\u0105 commit ID, kt\u00f3re znajdziesz w historii <code>git log</code>.</p> <pre><code>git checkout [commit_id]  # Przenosisz si\u0119 do konkretnej wersji kodu.\n</code></pre> <p>To jak powr\u00f3t do przesz\u0142o\u015bci, gdzie mo\u017cesz zobaczy\u0107, jak kod wygl\u0105da\u0142 przed ka\u017cd\u0105 katastrof\u0105!</p>"},{"location":"git/02_zaawansowany/#mergowanie-gaezi-zaczenie-si","title":"Mergowanie ga\u0142\u0119zi \u2013 Z\u0142\u0105czenie si\u0142! \ud83e\udd1d","text":"<p>Stworzy\u0142e\u015b now\u0105 ga\u0142\u0105\u017a, co\u015b w niej majstrowa\u0142e\u015b, a teraz chcesz te zmiany po\u0142\u0105czy\u0107 z g\u0142\u00f3wn\u0105 wersj\u0105 (czyli ga\u0142\u0119zi\u0105 <code>master</code>)? Czas na merge! Mergowanie to jak dodanie Twoich eksperyment\u00f3w do g\u0142\u00f3wnego kodu.</p> <p>Najpierw przechodzisz na <code>master</code>: <pre><code>git checkout master\n</code></pre></p> <p>A potem mergujesz swoj\u0105 ga\u0142\u0105\u017a z masterem: <pre><code>git merge moja-nowa-galaz  # \u0141\u0105czy zmiany z ga\u0142\u0119zi\u0105 master.\n</code></pre></p> <p>I voila! Wszystko jest teraz w jednej, szcz\u0119\u015bliwej wersji. \ud83e\udd73</p>"},{"location":"git/02_zaawansowany/#cofanie-commitow-o-nie-jednak-nie-to-chciaem","title":"Cofanie commit\u00f3w \u2013 O nie, jednak nie to chcia\u0142em! \ud83d\ude31","text":"<p>Co zrobi\u0107, je\u015bli wykona\u0142e\u015b commit, ale teraz tego \u017ca\u0142ujesz? Spokojnie, jest na to spos\u00f3b! Mo\u017cesz cofn\u0105\u0107 ostatni commit bez straty zmian, \u017ceby poprawi\u0107 kod lub komentarz.</p> <pre><code>git reset --soft HEAD~1  # Cofasz ostatni commit, ale zachowujesz zmiany.\n</code></pre> <p>Je\u015bli natomiast chcesz totalnie zresetowa\u0107 wszystko (i wr\u00f3ci\u0107 do stanu przed commitem), u\u017cyj: <pre><code>git reset --hard HEAD~1  # Cofasz commit i wszystkie zmiany.\n</code></pre></p> <p>Uwaga: --hard usuwa wszystkie zmiany, wi\u0119c u\u017cywaj tego jak supermocy \u2013 z rozwag\u0105!</p>"},{"location":"git/02_zaawansowany/#podsumowanie-twoje-nowe-supermoce-w-git","title":"Podsumowanie: Twoje nowe supermoce w Git! \u26a1","text":"<ul> <li>git checkout -b \u2013 Tworzenie i przechodzenie na now\u0105 ga\u0142\u0105\u017a w jednym kroku!</li> <li>git reset [nazwa_pliku] \u2013 Usuwasz plik ze staging area.</li> <li>git checkout [commit_id] \u2013 Przej\u015bcie do konkretnej wersji kodu.</li> <li>git merge [nazwa_ga\u0142\u0119zi] \u2013 \u0141\u0105czysz swoj\u0105 ga\u0142\u0105\u017a z g\u0142\u00f3wn\u0105 wersj\u0105 (master).</li> <li>git reset --soft HEAD~1 \u2013 Cofasz commit, ale zachowujesz zmiany.</li> <li>git reset --hard HEAD~1 \u2013 Cofasz commit i kasujesz zmiany (u\u017cywaj ostro\u017cnie!).</li> </ul> <p>Teraz jeste\u015b gotowy na najtrudniejsze bitwy programistyczne! Dzi\u0119ki tym komendom nie tylko b\u0119dziesz zarz\u0105dza\u0107 swoim kodem jak ninja, ale te\u017c naprawia\u0107 b\u0142\u0119dy i \u0142\u0105czy\u0107 zmiany jak prawdziwy superbohater! \ud83d\udca5</p>"},{"location":"git/03_zdalne/","title":"Repozytoria zdalne","text":""},{"location":"git/03_zdalne/#praca-z-repozytoriami-zdalnymi-czyli-jak-wspopracowac-z-reszta-swiata","title":"Praca z repozytoriami zdalnymi \u2013 czyli jak wsp\u00f3\u0142pracowa\u0107 z reszt\u0105 \u015bwiata! \ud83c\udf0d\ud83d\udee0\ufe0f","text":"<p>Git \u015bwietnie sprawdza si\u0119 na Twoim komputerze, ale co zrobi\u0107, gdy chcesz wsp\u00f3\u0142pracowa\u0107 z innymi? Tutaj pojawiaj\u0105 si\u0119 repozytoria zdalne \u2013 miejsca, w kt\u00f3rych mo\u017cemy przechowywa\u0107 i udost\u0119pnia\u0107 sw\u00f3j kod. Najpopularniejszym serwisem do hostowania zdalnych repozytori\u00f3w jest GitHub, ale istniej\u0105 te\u017c inne, jak GitLab czy Bitbucket.</p> <p>Repozytorium zdalne jest jak serwer, na kt\u00f3rym trzymasz kopi\u0119 swojego projektu. Dzi\u0119ki niemu Ty i Tw\u00f3j zesp\u00f3\u0142 mo\u017cecie synchronizowa\u0107 zmiany, wsp\u00f3lnie edytowa\u0107 kod i zawsze mie\u0107 dost\u0119p do najnowszej wersji projektu.</p>"},{"location":"git/03_zdalne/#1-co-to-jest-origin","title":"1. Co to jest <code>origin</code>? \ud83c\udff7\ufe0f","text":"<p>Kiedy pracujesz z repozytorium zdalnym, Git przypisuje mu alias \u2013 domy\u015blnie nazywany <code>origin</code>. To skr\u00f3t, kt\u00f3ry odnosi si\u0119 do adresu zdalnego repozytorium, na przyk\u0142ad adresu na GitHubie. Dzi\u0119ki <code>origin</code> mo\u017cesz \u0142atwo wykonywa\u0107 operacje na repozytorium zdalnym, np. pobiera\u0107 zmiany (<code>git pull</code>) lub wysy\u0142a\u0107 swoje (<code>git push</code>).</p>"},{"location":"git/03_zdalne/#2-jak-sklonowac-istniejace-repozytorium","title":"2. Jak sklonowa\u0107 istniej\u0105ce repozytorium? \ud83e\udde9","text":"<p>Je\u015bli chcesz pobra\u0107 istniej\u0105ce repozytorium na sw\u00f3j komputer, u\u017cyj komendy <code>git clone</code>. Sklonuje ona pe\u0142n\u0105 kopi\u0119 repozytorium, \u0142\u0105cznie z histori\u0105 commit\u00f3w.</p> <pre><code>git clone https://github.com/uzytkownik/nazwa_repo.git\n</code></pre> <p>Ta komenda tworzy nowy folder o nazwie repozytorium, w kt\u00f3rym znajdziesz jego pe\u0142n\u0105 zawarto\u015b\u0107. Teraz mo\u017cesz pracowa\u0107 na lokalnej kopii i synchronizowa\u0107 j\u0105 z wersj\u0105 zdaln\u0105.</p>"},{"location":"git/03_zdalne/#3-jak-podpiac-sie-do-istniejacego-repozytorium","title":"3. Jak podpi\u0105\u0107 si\u0119 do istniej\u0105cego repozytorium? \ud83d\udd17","text":"<p>Je\u015bli masz projekt na komputerze, ale nie jest jeszcze powi\u0105zany z repozytorium zdalnym, mo\u017cesz doda\u0107 do niego zdalne repozytorium r\u0119cznie:</p> <pre><code>git remote add origin https://github.com/uzytkownik/nazwa_repo.git\n</code></pre> <p>Ta komenda dodaje adres zdalnego repozytorium pod aliasem <code>origin</code>. Teraz Tw\u00f3j lokalny projekt jest po\u0142\u0105czony ze zdalnym repozytorium, co pozwala na wysy\u0142anie i pobieranie zmian.</p>"},{"location":"git/03_zdalne/#sprawdzanie-czy-masz-juz-poaczone-repozytorium-zdalne-git-remote-v","title":"Sprawdzanie, czy masz ju\u017c po\u0142\u0105czone repozytorium zdalne (<code>git remote -v</code>) \ud83d\udd0d","text":"<p>Chcesz sprawdzi\u0107, czy Twoje lokalne repozytorium jest ju\u017c powi\u0105zane ze zdalnym repozytorium? Mo\u017cesz to zrobi\u0107 za pomoc\u0105 komendy:</p> <pre><code>git remote -v\n</code></pre> <p>Ta komenda wy\u015bwietli list\u0119 wszystkich zdalnych repozytori\u00f3w powi\u0105zanych z Twoim projektem, wraz z ich adresami URL. Je\u015bli wcze\u015bniej doda\u0142e\u015b zdalne repozytorium jako <code>origin</code>, zobaczysz co\u015b takiego:</p> <pre><code>origin  https://github.com/uzytkownik/nazwa_repo.git (fetch)\norigin  https://github.com/uzytkownik/nazwa_repo.git (push)\n</code></pre> <p><code>(fetch)</code> wskazuje adres, z kt\u00f3rego Git pobiera zmiany, a <code>(push)</code> pokazuje, dok\u0105d zmiany s\u0105 wysy\u0142ane. Dzi\u0119ki temu mo\u017cesz szybko upewni\u0107 si\u0119, czy masz ju\u017c podpi\u0119te repozytorium zdalne oraz jakie aliasy i adresy s\u0105 z nim powi\u0105zane.</p>"},{"location":"git/03_zdalne/#4-wysyanie-zmian-do-zdalnego-repozytorium-git-push","title":"4. Wysy\u0142anie zmian do zdalnego repozytorium (<code>git push</code>) \ud83d\udce4","text":"<p>Kiedy wykonasz commity na swoim komputerze i chcesz je udost\u0119pni\u0107, u\u017cyj komendy <code>git push</code>. Ta komenda wysy\u0142a Twoje zmiany do zdalnego repozytorium (domy\u015blnie do <code>origin</code> i ga\u0142\u0119zi <code>main</code> lub <code>master</code>).</p> <pre><code>git push origin main\n</code></pre> <p>Dzi\u0119ki <code>git push</code> Tw\u00f3j kod jest teraz dost\u0119pny w zdalnym repozytorium i widoczny dla innych os\u00f3b.</p>"},{"location":"git/03_zdalne/#5-pobieranie-zmian-z-repozytorium-zdalnego-git-pull","title":"5. Pobieranie zmian z repozytorium zdalnego (<code>git pull</code>) \ud83d\udce5","text":"<p>Je\u015bli pracujesz z zespo\u0142em, inni mog\u0105 wprowadza\u0107 zmiany w projekcie, kt\u00f3re chcesz zsynchronizowa\u0107 z Twoj\u0105 lokaln\u0105 wersj\u0105. Aby pobra\u0107 najnowsze zmiany z repozytorium zdalnego, u\u017cyj <code>git pull</code>.</p> <pre><code>git pull origin main\n</code></pre> <p>Ta komenda pobiera wszystkie zmiany z ga\u0142\u0119zi <code>main</code> (lub innej, je\u015bli j\u0105 podasz) i \u0142\u0105czy je z Twoim lokalnym kodem. <code>git pull</code> to po\u0142\u0105czenie dw\u00f3ch komend: <code>git fetch</code> (pobieranie zmian) i <code>git merge</code> (\u0142\u0105czenie zmian).</p>"},{"location":"git/03_zdalne/#6-aktualizacja-zdalnego-repozytorium-git-fetch","title":"6. Aktualizacja zdalnego repozytorium (<code>git fetch</code>) \ud83d\udc40","text":"<p>Je\u015bli chcesz jedynie pobra\u0107 zmiany z repozytorium zdalnego, ale nie \u0142\u0105czy\u0107 ich od razu z lokalnym kodem, mo\u017cesz u\u017cy\u0107 <code>git fetch</code>. Ta komenda aktualizuje informacje o zdalnych zmianach, ale ich nie scala.</p> <pre><code>git fetch origin\n</code></pre> <p>Dzi\u0119ki <code>git fetch</code> zobaczysz najnowsze zmiany w repozytorium zdalnym, a potem mo\u017cesz zdecydowa\u0107, czy chcesz je po\u0142\u0105czy\u0107 (np. za pomoc\u0105 <code>git merge</code>).</p>"},{"location":"git/03_zdalne/#podsumowanie-najwazniejsze-komendy-do-repozytoriow-zdalnych","title":"Podsumowanie \u2013 najwa\u017cniejsze komendy do repozytori\u00f3w zdalnych \ud83c\udf10","text":"<ul> <li><code>git clone [adres]</code> \u2013 Sklonowanie zdalnego repozytorium na lokalny komputer.</li> <li><code>git remote add origin [adres]</code> \u2013 Powi\u0105zanie lokalnego repozytorium ze zdalnym.</li> <li><code>git push origin [ga\u0142\u0105\u017a]</code> \u2013 Wysy\u0142anie commit\u00f3w do zdalnego repozytorium.</li> <li><code>git pull origin [ga\u0142\u0105\u017a]</code> \u2013 Pobieranie i \u0142\u0105czenie zmian ze zdalnego repozytorium.</li> <li><code>git fetch origin</code> \u2013 Pobieranie zmian bez \u0142\u0105czenia ich z lokalnym kodem.</li> </ul> <p>Dzi\u0119ki repozytoriom zdalnym mo\u017cesz wsp\u00f3\u0142pracowa\u0107 z innymi, mie\u0107 dost\u0119p do kopii zapasowych swojego kodu i pracowa\u0107 na r\u00f3\u017cnych komputerach, zachowuj\u0105c ci\u0105g\u0142o\u015b\u0107 projektu. Git sprawia, \u017ce wsp\u00f3\u0142praca i synchronizacja s\u0105 \u0142atwe i bezpieczne! \ud83e\uddd1\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83d\udcbb</p>"},{"location":"git/03_zdalne/#notatki-dla-prowadzacego","title":"Notatki dla prowadz\u0105cego:","text":""},{"location":"git/03_zdalne/#1-gaezie","title":"1. Ga\u0142\u0119zie","text":"<ul> <li>Definicja: Ga\u0142\u0119zie to niezale\u017cne \u015bcie\u017cki rozwoju projektu.</li> <li>Przyk\u0142ad wizualny: </li> <li>master: A -&gt; B -&gt; C -&gt; D -&gt; E -&gt; F</li> <li>feature: A -&gt; B -&gt; C -&gt; D -&gt; E -&gt; F -&gt; G -&gt; H</li> <li>Dlaczego u\u017cywamy ga\u0142\u0119zi?</li> <li>Stabilny kod w g\u0142\u00f3wnej ga\u0142\u0119zi.</li> <li>R\u00f3wnoleg\u0142a praca nad r\u00f3\u017cnymi funkcjami.</li> <li>Rozdzielenie wersji produkcyjnej (master/main) od deweloperskiej (develop).</li> </ul>"},{"location":"git/03_zdalne/#2-podstawowe-operacje-na-gaeziach","title":"2. Podstawowe operacje na ga\u0142\u0119ziach","text":"<ul> <li>Sprawdzenie dost\u0119pnych ga\u0142\u0119zi: <code>git branch</code></li> <li>Utworzenie nowej ga\u0142\u0119zi: <code>git checkout -b &lt;nazwa ga\u0142\u0119zi&gt;</code></li> <li>Prze\u0142\u0105czenie na inn\u0105 ga\u0142\u0105\u017a: <code>git checkout &lt;nazwa ga\u0142\u0119zi&gt;</code></li> <li>Dodanie zmian do aktualnej ga\u0142\u0119zi:</li> <li><code>git add &lt;plik&gt;</code></li> <li><code>git commit -m \"&lt;komentarz&gt;\"</code></li> </ul>"},{"location":"git/03_zdalne/#3-aczenie-gaezi","title":"3. \u0141\u0105czenie ga\u0142\u0119zi","text":"<ul> <li>\u0141\u0105czenie ga\u0142\u0119zi do bie\u017c\u0105cej: <code>git merge &lt;nazwa ga\u0142\u0119zi&gt;</code></li> <li>Rozwi\u0105zywanie konflikt\u00f3w:</li> <li>Oznaczenie konflikt\u00f3w w pliku: <code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>, <code>=======</code>, <code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code></li> <li>Rozwi\u0105zanie konfliktu r\u0119cznie.</li> <li>Zatwierdzenie zmian: <ul> <li><code>git add &lt;plik&gt;</code></li> <li><code>git commit -m \"&lt;komentarz&gt;\"</code></li> </ul> </li> </ul>"},{"location":"git/03_zdalne/#4-praca-z-repozytoriami-zdalnymi","title":"4. Praca z repozytoriami zdalnymi","text":"<ul> <li>Dodanie repozytorium zdalnego: <code>git remote add origin &lt;url&gt;</code></li> <li>Kluczowe komendy:</li> <li><code>git fetch</code> \u2013 pobieranie zmian z serwera bez ich scalania.</li> <li><code>git pull</code> \u2013 pobieranie i automatyczne scalanie zmian.</li> <li><code>git push &lt;repozytorium&gt; &lt;ga\u0142\u0105\u017a&gt;</code> \u2013 wysy\u0142anie zmian na serwer.</li> <li>Sprawdzenie ga\u0142\u0119zi zdalnych: <code>git branch -a</code></li> </ul>"},{"location":"git/03_zdalne/#5-tworzenie-repozytorium-zdalnego","title":"5. Tworzenie repozytorium zdalnego","text":"<ul> <li>Nowe repozytorium lokalne + zdalne:</li> <li><code>git clone &lt;url repozytorium&gt;</code></li> <li>Istniej\u0105ce repozytorium lokalne + zdalne:</li> <li><code>git remote add origin &lt;url&gt;</code></li> <li><code>git push -u origin &lt;ga\u0142\u0105\u017a&gt;</code> \u2013 pierwszy push z ustawieniem domy\u015blnego repozytorium.</li> </ul>"},{"location":"git/03_zdalne/#6-konflikty-i-ich-rozwiazywanie","title":"6. Konflikty i ich rozwi\u0105zywanie","text":"<ul> <li>Scenariusz konfliktu:</li> <li>Ten sam plik zmodyfikowany w dw\u00f3ch ga\u0142\u0119ziach.</li> <li>Pr\u00f3ba merge generuje konflikt.</li> <li>Rozwi\u0105zanie konfliktu:</li> <li>Otw\u00f3rz plik.</li> <li>Usu\u0144 oznaczenia <code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>, <code>=======</code>, <code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>.</li> <li>Wybierz w\u0142a\u015bciw\u0105 tre\u015b\u0107 lub po\u0142\u0105cz zmiany.</li> <li>Zatwierd\u017a zmiany: <code>git add &lt;plik&gt;</code>, <code>git commit</code>.</li> </ul>"},{"location":"git/03_zdalne/#7-praca-w-zespole-z-repozytoriami-zdalnymi","title":"7. Praca w zespole z repozytoriami zdalnymi","text":"<ul> <li>Codzienne praktyki:</li> <li>Regularne push do repozytorium zdalnego.</li> <li>Fetch/pull na pocz\u0105tku dnia pracy.</li> <li>Najwi\u0119ksi dostawcy repozytori\u00f3w:</li> <li>GitHub.</li> <li>GitLab.</li> <li>Bitbucket.</li> </ul>"},{"location":"git/03_zdalne/#8-zalety-repozytoriow-zdalnych","title":"8. Zalety repozytori\u00f3w zdalnych","text":"<ul> <li>Bezpiecze\u0144stwo \u2013 kopia na serwerze.</li> <li>Wsp\u00f3\u0142praca \u2013 u\u0142atwia dzielenie si\u0119 kodem.</li> <li>Narz\u0119dzia dodatkowe \u2013 pull requesty, komentarze, integracja z bugtrackerami.</li> </ul> <p>To lista punkt\u00f3w kluczowych do om\u00f3wienia. Pozwala na p\u0142ynne prowadzenie lekcji, koncentruj\u0105c si\u0119 na praktycznych aspektach pracy z ga\u0142\u0119ziami i repozytoriami zdalnymi.</p>"},{"location":"python/","title":"Python \u2013 Tw\u00f3j nowy najlepszy kumpel! \ud83d\udc0d","text":"<p>Python to j\u0119zyk programowania, kt\u00f3ry jest tak prosty i przyjazny, \u017ce nawet Twoja babcia mog\u0142aby zacz\u0105\u0107 go u\u017cywa\u0107 (o ile umie w\u0142\u0105czy\u0107 komputer). Dzi\u0119ki czytelnej sk\u0142adni i intuicyjno\u015bci, jest idealny zar\u00f3wno dla tych, kt\u00f3rzy dopiero zaczynaj\u0105 swoj\u0105 przygod\u0119 z programowaniem, jak i dla starych wyjadaczy kodu.</p> <p>Mo\u017cesz go u\u017cywa\u0107 do wszystkiego \u2013 od robienia wykres\u00f3w na wyk\u0142adach, przez sztuczn\u0105 inteligencj\u0119, a\u017c po automatyzowanie nudnych rzeczy, jak sprz\u0105tanie Twojego biurka... no dobra, mo\u017ce sprz\u0105tania biurka nie zrobi, ale za to pomo\u017ce Ci napisa\u0107 gr\u0119! \ud83c\udfae</p> <p>Python ma gigantyczn\u0105 spo\u0142eczno\u015b\u0107, wi\u0119c gdy utkniesz, zawsze znajdzie si\u0119 kto\u015b, kto uratuje Ci\u0119 przed b\u0142\u0119dami (albo przynajmniej poda kaw\u0119). Ma te\u017c ton\u0119 bibliotek \u2013 czyli narz\u0119dzi, kt\u00f3re zrobi\u0105 za Ciebie wi\u0119kszo\u015b\u0107 pracy, \u017ceby\u015b Ty m\u00f3g\u0142 skupi\u0107 si\u0119 na najwa\u017cniejszym: robieniu sobie przerw!</p> <p>Oto klasyczny przyk\u0142ad programu w Pythonie:</p> <pre><code>print(\"Hello, World!\")\n</code></pre> <p>Kiedy uruchomisz ten magiczny kawa\u0142ek kodu, komputer powie Ci... no c\u00f3\u017c, \"Hello, World!\". Tak w\u0142a\u015bnie zaczyna si\u0119 wi\u0119kszo\u015b\u0107 wielkich przyg\u00f3d w Pythonie!</p> <p>Teraz Ty mo\u017cesz zacz\u0105\u0107 \u2013 koduj i baw si\u0119 dobrze! \ud83d\ude0e</p>"},{"location":"python/zajecia01/","title":"Zaj\u0119cia 1 - zmienne, input","text":""},{"location":"python/zajecia01/#typy-proste-w-pythonie-wersja-dla-ludzi","title":"Typy proste w Pythonie \u2013 Wersja dla ludzi! \ud83e\uddd9\u200d\u2642\ufe0f","text":"<p>W Pythonie mamy kilka podstawowych typ\u00f3w zmiennych, kt\u00f3re s\u0105 tak proste, \u017ce nawet Tw\u00f3j kot by je zrozumia\u0142 (no dobra, mo\u017ce nie ka\u017cdy kot...). Oto one:</p> <ul> <li> <p>int \u2013 liczby ca\u0142kowite. Idealne do liczenia kotlet\u00f3w na talerzu. \ud83c\udf56   Przyk\u0142ad: <pre><code>kotlety = 5  # Czyli tyle, ile dasz rad\u0119 zje\u015b\u0107 na obiad.\n</code></pre></p> </li> <li> <p>float \u2013 liczby zmiennoprzecinkowe, czyli takie z przecinkiem. U\u017cywaj, kiedy chcesz by\u0107 precyzyjny jak szwajcarski zegarek. \u23f1\ufe0f   Przyk\u0142ad: <pre><code>pi = 3.14  # Idealne do liczenia obwodu pizzy! \ud83c\udf55\n</code></pre></p> </li> <li> <p>str \u2013 \u0142a\u0144cuch znak\u00f3w, czyli tekst. Bez tego nie ma rozm\u00f3w, wiadomo\u015bci ani koderskich \u017cart\u00f3w! \ud83e\udd13   Przyk\u0142ad: <pre><code>imie = \"Kuba\"  # Bo ka\u017cde zmienne zas\u0142uguj\u0105 na imi\u0119.\n</code></pre></p> </li> <li> <p>bool \u2013 warto\u015bci logiczne, kt\u00f3re s\u0105 jak \u015bwiat\u0142o w lod\u00f3wce: albo w\u0142\u0105czone, albo wy\u0142\u0105czone. \ud83d\udca1   Przyk\u0142ad: <pre><code>czy_pizza_zjadana = True  # Odpowied\u017a zawsze brzmi: tak! \ud83c\udf55\n</code></pre></p> </li> </ul> <p>No i to tyle! Proste jak strza\u0142ka w kodzie \u2013 teraz mo\u017cesz pisa\u0107 swoje programy z tak\u0105 swobod\u0105, jakby\u015b rozmawia\u0142 o tym przy kawie! \u2615</p>"},{"location":"python/zajecia01/#pobieranie-tekstu-od-uzytkownika-czyli-jak-rozmawiac-z-komputerem","title":"Pobieranie tekstu od u\u017cytkownika \u2013 czyli jak rozmawia\u0107 z komputerem! \ud83d\udda5\ufe0f\ud83d\udcac","text":"<p>W Pythonie mo\u017cesz poprosi\u0107 u\u017cytkownika o wpisanie czego\u015b, a komputer to odczyta jak najlepszy kumpel na czacie. U\u017cywamy do tego funkcji <code>input()</code>, kt\u00f3ra czeka na wpisanie tekstu i potem robi z nim cuda (albo przynajmniej wy\u015bwietla).</p> <p>Przyk\u0142ad: <pre><code>imie = input(\"Jak masz na imi\u0119? \")\nprint(\"Cze\u015b\u0107, \" + imie + \"!\")\n</code></pre></p> <p>Kiedy uruchomisz ten kod, komputer grzecznie zapyta o imi\u0119 i odpowie: \u201eCze\u015b\u0107, Kuba!\u201d (je\u015bli masz na imi\u0119 Kuba...).</p>"},{"location":"python/zajecia01/#formatowanie-stringow-czyli-jak-adnie-poskadac-tekst","title":"Formatowanie string\u00f3w \u2013 czyli jak \u0142adnie posk\u0142ada\u0107 tekst! \ud83c\udfa8","text":"<p>Je\u015bli chcesz zrobi\u0107 co\u015b bardziej fancy, mamy na to dwa sposoby: <code>.format()</code> i f-stringi. Oba pozwol\u0105 Ci w\u0142o\u017cy\u0107 zmienne do tekstu jak kawa\u0142ki puzzli.</p> <ol> <li>Metoda .format() \u2013 troch\u0119 jak uk\u0142adanie puzzli na spokojnie:</li> </ol> <p><pre><code>imie = \"Kuba\"\nwiek = 30\ntekst = \"Cze\u015b\u0107, {}! Masz {} lat.\".format(imie, wiek)\nprint(tekst)\n</code></pre>    Wynik: <code>Cze\u015b\u0107, Kuba! Masz 30 lat.</code></p> <ol> <li>F-stringi \u2013 czyli wersja turbo dla leniwych (albo super sprawnych):</li> </ol> <p><pre><code>imie = \"Kuba\"\nwiek = 30\ntekst = f\"Cze\u015b\u0107, {imie}! Masz {wiek} lat.\"\nprint(tekst)\n</code></pre>    Wynik: <code>Cze\u015b\u0107, Kuba! Masz 30 lat.</code></p> <p>F-stringi s\u0105 jak zam\u00f3wienie kawy z odbiorem na wynos \u2013 szybkie, proste i idealne do wszystkiego. Po prostu wstawiasz zmienne w <code>{}</code> i Python zrobi reszt\u0119!</p> <p>To tyle! Teraz wiesz, jak zapyta\u0107 u\u017cytkownika o co\u015b, a potem \u0142adnie odpowiedzie\u0107, \u017ceby wszystko wygl\u0105da\u0142o pro jak w filmach! \ud83c\udfac</p>"},{"location":"python/zajecia02/","title":"Zaj\u0119cia 2 - if, p\u0119tle","text":""},{"location":"python/zajecia02/#decyzje-i-powtorki-czyli-jak-python-mysli-i-dziaa","title":"Decyzje i powt\u00f3rki \u2013 czyli jak Python my\u015bli i dzia\u0142a! \ud83e\udd14\ud83d\udd04","text":"<p>W Pythonie mamy kilka sprytnych sposob\u00f3w, \u017ceby komputer podejmowa\u0142 decyzje i powtarza\u0142 co\u015b, kiedy tego potrzebujemy. Poznajmy if, for i while \u2013 tr\u00f3jk\u0119 najlepszych przyjaci\u00f3\u0142 programisty!</p>"},{"location":"python/zajecia02/#if-decyzje-w-stylu-komputera","title":"If \u2013 decyzje w stylu komputera! \ud83d\udca1","text":"<p>Chcesz, \u017ceby komputer podj\u0105\u0142 decyzj\u0119? Zr\u00f3b to za pomoc\u0105 if! Python dzia\u0142a wtedy jak super szybki s\u0119dzia: je\u015bli co\u015b jest prawdziwe, zrobi to, co ka\u017cesz, a jak nie, to... po prostu nic nie zrobi (chyba \u017ce dorzucisz inne opcje).</p> <p>Przyk\u0142ad: <pre><code>x = 10\nif x &gt; 5:\n    print(\"X jest wi\u0119ksze od 5!\")\nelse:\n    print(\"X jest mniejsze lub r\u00f3wne 5!\")\n</code></pre> Wynik: <code>X jest wi\u0119ksze od 5!</code></p> <p>Komputer sprawdza, czy <code>x &gt; 5</code> i je\u015bli tak, wy\u015bwietla to, co jest w if. Je\u015bli nie, przechodzi do else \u2013 bo przecie\u017c \u017cycie to sztuka wybor\u00f3w!</p>"},{"location":"python/zajecia02/#for-powtarzanie-rzeczy-na-okrago","title":"For \u2013 powtarzanie rzeczy na okr\u0105g\u0142o! \ud83d\udd01","text":"<p>Je\u015bli musisz co\u015b zrobi\u0107 kilka razy, np. przej\u015b\u0107 przez list\u0119 ulubionych piosenek, Python u\u017cyje p\u0119tli for, by powt\u00f3rzy\u0107 to tak d\u0142ugo, jak trzeba.</p> <p>Przyk\u0142ad: <pre><code>piosenki = [\"Bohemian Rhapsody\", \"Stairway to Heaven\", \"Hotel California\"]\nfor piosenka in piosenki:\n    print(f\"S\u0142ucham: {piosenka}\")\n</code></pre> Wynik: <pre><code>S\u0142ucham: Bohemian Rhapsody\nS\u0142ucham: Stairway to Heaven\nS\u0142ucham: Hotel California\n</code></pre> Python przejdzie przez ka\u017cd\u0105 piosenk\u0119 na li\u015bcie i wy\u015bwietli jej tytu\u0142 \u2013 prosto, prawda?</p>"},{"location":"python/zajecia02/#while-dopoki-warunki-sa-spenione","title":"While \u2013 dop\u00f3ki warunki s\u0105 spe\u0142nione! \u23f3","text":"<p>P\u0119tla while to jak powiedzenie \"b\u0119d\u0119 to robi\u0107, dop\u00f3ki...\", a Python robi to tak d\u0142ugo, a\u017c warunek przestanie by\u0107 prawdziwy.</p> <p>Przyk\u0142ad: <pre><code>licznik = 5\nwhile licznik &gt; 0:\n    print(f\"Licznik: {licznik}\")\n    licznik -= 1\n</code></pre> Wynik: <pre><code>Licznik: 5\nLicznik: 4\nLicznik: 3\nLicznik: 2\nLicznik: 1\n</code></pre> P\u0119tla b\u0119dzie si\u0119 kr\u0119ci\u0107, dop\u00f3ki licznik nie spadnie do zera. Potem Python si\u0119 zatrzyma, bo wszystko ma swoje granice!</p>"},{"location":"python/zajecia02/#podsumowanie","title":"Podsumowanie","text":"<ul> <li>If \u2013 komputer wybiera jedn\u0105 z dr\u00f3g, jak prawdziwy Sherlock Holmes! \ud83d\udd75\ufe0f\u200d\u2642\ufe0f</li> <li>For \u2013 powtarzanie, \u017ceby co\u015b zrobi\u0107 dla ka\u017cdego elementu w zbiorze. \ud83d\udcc0</li> <li>While \u2013 robienie czego\u015b, dop\u00f3ki warunek jest spe\u0142niony. \u23f0</li> </ul> <p>I to tyle! Teraz ju\u017c wiesz, jak sprawi\u0107, \u017ceby Tw\u00f3j program podejmowa\u0142 decyzje i powtarza\u0142 rzeczy bez ko\u0144ca (albo przynajmniej do momentu, gdy powiesz \"stop\"). \ud83d\ude09</p>"},{"location":"python/zajecia02/#zadanie","title":"Zadanie","text":"<p>Ponizej znajduje si\u0119 wizualizacja dzia\u0142\u0105nia p\u0119tli z Przyk\u0142adu 2 do pracy domowej: <pre><code>Przyk\u0142ad 2:\nIlo\u015b\u0107 element\u00f3w: 6\nWagi element\u00f3w: 3, 6, 5, 8, 2, 3\n</code></pre></p> <p></p>"},{"location":"python/zajecia03/","title":"Zaj\u0119cia 3 - listy, s\u0142owniki itd.","text":""},{"location":"python/zajecia03/#listy-krotki-sowniki-i-zbiory-czyli-jak-python-organizuje-chaos","title":"Listy, krotki, s\u0142owniki i zbiory \u2013 czyli jak Python organizuje chaos! \ud83e\udde0\ud83d\udd22","text":"<p>W Pythonie mamy kilka sprytnych sposob\u00f3w na przechowywanie danych w wi\u0119kszych paczkach. Poznaj cztery tajne bronie do tego zadania: listy, krotki, s\u0142owniki i zbiory! Ka\u017cda z nich ma swoje unikalne supermoce, wi\u0119c dowiedzmy si\u0119, czym si\u0119 r\u00f3\u017cni\u0105 i do czego najlepiej ich u\u017cywa\u0107. \ud83d\ude80</p>"},{"location":"python/zajecia03/#listy-taka-tablica-tylko-bardziej-cool","title":"Listy \u2013 taka tablica, tylko bardziej cool! \ud83d\udcdd","text":"<p>Lista to zbi\u00f3r rzeczy, kt\u00f3re mo\u017cna dowolnie zmienia\u0107, dodawa\u0107 i usuwa\u0107, jakby to by\u0142a Twoja codzienna lista zakup\u00f3w. Masz pe\u0142n\u0105 swobod\u0119!</p> <p>Przyk\u0142ad: <pre><code>owoce = [\"jab\u0142ko\", \"banan\", \"pomara\u0144cza\"]\nowoce.append(\"gruszka\")  # Dodajemy gruszk\u0119 do listy\nprint(owoce)  # Wynik: [\"jab\u0142ko\", \"banan\", \"pomara\u0144cza\", \"gruszka\"]\n</code></pre></p> <p>Co mo\u017cesz robi\u0107 z listami? - Dodawa\u0107 nowe elementy: <code>owoce.append(\"gruszka\")</code> - Usuwa\u0107 elementy: <code>owoce.remove(\"banan\")</code> - Odczytywa\u0107 elementy: <code>owoce[0]</code> (pierwszy element to \"jab\u0142ko\")</p> <p>Lista to elastyczny kolega, kt\u00f3ry zawsze jest gotowy na zmiany! \ud83d\udcaa</p>"},{"location":"python/zajecia03/#krotki-dla-fanow-stabilnosci","title":"Krotki \u2013 dla fan\u00f3w stabilno\u015bci! \ud83d\udd12","text":"<p>Krotka (ang. tuple) to jak lista, ale taka, kt\u00f3rej nie mo\u017cna zmienia\u0107 \u2013 jak umowa, kt\u00f3rej musisz dotrzyma\u0107. Raz utworzona, nie pozwala na dodawanie czy usuwanie element\u00f3w. U\u017cywaj jej, kiedy wiesz, \u017ce dane maj\u0105 by\u0107 \"zamro\u017cone\" na wieki.</p> <p>Przyk\u0142ad: <pre><code>kolory = (\"czerwony\", \"zielony\", \"niebieski\")\nprint(kolory[1])  # Wynik: \"zielony\"\n</code></pre></p> <p>Co mo\u017cna robi\u0107 z krotkami? - Odczytywa\u0107 elementy: <code>kolory[0]</code> - Ale nie mo\u017cna zmienia\u0107 ani dodawa\u0107 nowych element\u00f3w!</p> <p>Krotki to doskona\u0142y wyb\u00f3r, je\u015bli chcesz, \u017ceby dane pozosta\u0142y nienaruszone \u2013 jak skarb w sejfie. \ud83c\udfdb\ufe0f</p>"},{"location":"python/zajecia03/#sowniki-twoj-osobisty-organizer","title":"S\u0142owniki \u2013 Tw\u00f3j osobisty organizer! \ud83d\udcd6\ud83d\udd11","text":"<p>S\u0142ownik (ang. dictionary) to zbi\u00f3r kluczy i przypisanych do nich warto\u015bci. My\u015blisz o nim jak o prawdziwym s\u0142owniku: klucz (s\u0142owo) i warto\u015b\u0107 (definicja). Ka\u017cdy klucz w s\u0142owniku jest unikalny, a do ka\u017cdej warto\u015bci mo\u017cna si\u0119 \u0142atwo dosta\u0107 przez ten klucz.</p> <p>Przyk\u0142ad: <pre><code>osoba = {\"imie\": \"Kuba\", \"wiek\": 30, \"miasto\": \"Warszawa\"}\nprint(osoba[\"imie\"])  # Wynik: \"Kuba\"\n</code></pre></p> <p>Co mo\u017cna robi\u0107 ze s\u0142ownikami? - Dodawa\u0107 lub modyfikowa\u0107 warto\u015bci: <code>osoba[\"praca\"] = \"programista\"</code> - Odczytywa\u0107 warto\u015bci: <code>osoba[\"wiek\"]</code> - Usuwa\u0107 elementy: <code>del osoba[\"miasto\"]</code></p> <p>S\u0142owniki to doskona\u0142e narz\u0119dzie, gdy masz dane w parach (klucz \u2013 warto\u015b\u0107) i chcesz mie\u0107 szybki dost\u0119p do informacji. \ud83e\udde0\ud83d\udd11</p>"},{"location":"python/zajecia03/#zbiory-dla-miosnikow-porzadku-i-unikalnosci","title":"Zbiory \u2013 dla mi\u0142o\u015bnik\u00f3w porz\u0105dku i unikalno\u015bci! \ud83e\uddf9","text":"<p>Zbi\u00f3r (ang. set) to taki pojemnik, kt\u00f3ry pozwala przechowywa\u0107 wy\u0142\u0105cznie unikalne elementy. Czyli zero duplikat\u00f3w! Idealny, kiedy musisz pozby\u0107 si\u0119 powtarzaj\u0105cych si\u0119 rzeczy albo gdy chcesz pracowa\u0107 z danymi, kt\u00f3re s\u0105 tylko raz.</p> <p>Przyk\u0142ad: <pre><code>cyfry = {1, 2, 3, 3, 4}  # Zbi\u00f3r automatycznie wyrzuci powt\u00f3rzenia\nprint(cyfry)  # Wynik: {1, 2, 3, 4}\n</code></pre></p> <p>Co mo\u017cna robi\u0107 ze zbiorami? - Dodawa\u0107 elementy: <code>cyfry.add(5)</code> - Usuwa\u0107 elementy: <code>cyfry.remove(2)</code> - Sprawdza\u0107 unikalno\u015b\u0107!</p> <p>Zbiory to porz\u0105dkowi, kt\u00f3rzy usuwaj\u0105 wszystkie duplikaty i dbaj\u0105 o czysto\u015b\u0107 w Twoich danych! \ud83e\uddfd</p>"},{"location":"python/zajecia03/#podsumowanie","title":"Podsumowanie","text":"<ul> <li>Listy \u2013 Elastyczne i \u0142atwe do zmiany, jak lista zakup\u00f3w. \ud83d\udccb</li> <li>Krotki \u2013 Stabilne i niezmienne, jak pos\u0105g w muzeum. \ud83d\uddff</li> <li>S\u0142owniki \u2013 Zbiory klucz-warto\u015b\u0107, idealne do przechowywania informacji. \ud83d\udd10</li> <li>Zbiory \u2013 Unikalne elementy, \u015bwietne do porz\u0105dkowania danych. \u2728</li> </ul> <p>Teraz masz cztery pot\u0119\u017cne narz\u0119dzia do zarz\u0105dzania danymi w Pythonie. U\u017cywaj ich m\u0105drze i niech Twoje dane zawsze b\u0119d\u0105 zorganizowane jak nale\u017cy! \ud83d\ude0e</p>"},{"location":"python/zajecia04/","title":"Zaj\u0119cia 4 - funkcje, klasy","text":""},{"location":"python/zajecia04/#funkcje-czyli-jak-nauczyc-komputer-robic-cos-za-ciebie","title":"Funkcje \u2013 czyli jak nauczy\u0107 komputer robi\u0107 co\u015b za Ciebie! \ud83e\uddd1\u200d\ud83c\udf73\ud83e\udd16","text":"<p>Funkcje to jedne z najlepszych wynalazk\u00f3w w Pythonie (i nie tylko!). Dzi\u0119ki nim mo\u017cesz sprawi\u0107, \u017ce komputer wykona za Ciebie konkretne zadania, a Ty nie b\u0119dziesz musia\u0142 pisa\u0107 tego samego kodu milion razy. To jak przepis, kt\u00f3ry mo\u017cesz u\u017cywa\u0107 do pieczenia ciasta tyle razy, ile chcesz \u2013 wystarczy raz go stworzy\u0107!</p>"},{"location":"python/zajecia04/#tworzenie-funkcji-czyli-magiczne-zaklecie","title":"Tworzenie funkcji \u2013 czyli magiczne zakl\u0119cie! \u2728","text":"<p>Kiedy chcesz, \u017ceby komputer co\u015b dla Ciebie zrobi\u0142, tworzysz funkcj\u0119. Zaczynasz od s\u0142owa kluczowego <code>def</code>, kt\u00f3re m\u00f3wi Pythonowi: \"Hej, teraz tworz\u0119 funkcj\u0119!\" (czyli przepis). Potem nadajesz funkcji nazw\u0119, podajesz jej sk\u0142adniki (parametry), a na koniec piszesz, co ta funkcja ma zrobi\u0107.</p> <p>Przyk\u0142ad: <pre><code>def powiedz_czesc(imie):\n    print(f\"Cze\u015b\u0107, {imie}!\")\n</code></pre></p> <p>A teraz wystarczy wywo\u0142a\u0107 t\u0119 funkcj\u0119: <pre><code>powiedz_czesc(\"Kuba\")  # Wynik: Cze\u015b\u0107, Kuba!\n</code></pre></p> <p>Funkcja <code>powiedz_czesc</code> przyjmuje jeden \"sk\u0142adnik\" \u2013 imi\u0119 \u2013 i wy\u015bwietla powitanie. Proste i przyjemne!</p>"},{"location":"python/zajecia04/#funkcje-zwracajace-wartosc-jakby-komputer-ci-cos-oddawa","title":"Funkcje zwracaj\u0105ce warto\u015b\u0107 \u2013 jakby komputer Ci co\u015b oddawa\u0142! \ud83c\udf81","text":"<p>Niekt\u00f3re funkcje nie tylko co\u015b robi\u0105, ale te\u017c mog\u0105 co\u015b zwr\u00f3ci\u0107 (czyli odda\u0107 Ci wynik). U\u017cywamy do tego s\u0142owa <code>return</code>. Dzi\u0119ki temu mo\u017cesz zapisa\u0107 wynik dzia\u0142ania funkcji i u\u017cy\u0107 go gdzie\u015b indziej.</p> <p>Przyk\u0142ad: <pre><code>def dodaj(a, b):\n    return a + b\n\nwynik = dodaj(3, 5)\nprint(wynik)  # Wynik: 8\n</code></pre></p> <p>Tutaj funkcja dodaj sumuje dwie liczby i oddaje wynik \u2013 mo\u017cesz go p\u00f3\u017aniej wykorzysta\u0107 w innym miejscu.</p>"},{"location":"python/zajecia04/#wstep-do-klas-czyli-jak-nauczyc-pythona-czym-jest-pies","title":"Wst\u0119p do klas \u2013 czyli jak nauczy\u0107 Pythona, czym jest pies! \ud83d\udc15\ud83c\udfdb\ufe0f","text":"<p>Kiedy funkcje przestaj\u0105 wystarcza\u0107, czas na klasy! Klasy to taki spos\u00f3b, \u017ceby w Pythonie tworzy\u0107 obiekty \u2013 np. pies, samoch\u00f3d albo posta\u0107 w grze. Klasy to takie szablony dla obiekt\u00f3w. Daj\u0105 Ci mo\u017cliwo\u015b\u0107 stworzenia czego\u015b bardziej z\u0142o\u017conego, co ma zar\u00f3wno atrybuty (jakie\u015b w\u0142a\u015bciwo\u015bci, np. imi\u0119 psa), jak i metody (czyli to, co obiekt mo\u017ce robi\u0107, np. szczeka\u0107).</p>"},{"location":"python/zajecia04/#tworzenie-klasy-plan-na-twoj-obiekt","title":"Tworzenie klasy \u2013 plan na Tw\u00f3j obiekt! \ud83d\udcd0","text":"<p>Kiedy tworzysz klas\u0119, m\u00f3wisz Pythonowi, jak zbudowa\u0107 obiekt i jakie b\u0119dzie mia\u0142 cechy. A potem mo\u017cesz stworzy\u0107 tyle obiekt\u00f3w na podstawie tej klasy, ile potrzebujesz!</p> <p>Przyk\u0142ad: <pre><code>class Pies:\n    def __init__(self, imie, rasa):\n        self.imie = imie\n        self.rasa = rasa\n\n    def szczekaj(self):\n        print(f\"{self.imie} szczeka! Hau hau!\")\n\n# Tworzymy obiekt (czyli psa) na podstawie klasy Pies\nmoj_pies = Pies(\"Torvi\", \"Entlebucher\")\nmoj_pies.szczekaj()  # Wynik: Torvi szczeka! Hau hau!\n</code></pre></p>"},{"location":"python/zajecia04/#co-tu-sie-dzieje","title":"Co tu si\u0119 dzieje?","text":"<ul> <li>class \u2013 S\u0142owo kluczowe, kt\u00f3re m\u00f3wi: \"Tworz\u0119 now\u0105 klas\u0119\".</li> <li>init \u2013 To taka funkcja specjalna, kt\u00f3ra uruchamia si\u0119, gdy tworzysz nowy obiekt. Ustawia pocz\u0105tkowe warto\u015bci (np. imi\u0119 i ras\u0119 psa).</li> <li>self \u2013 To taki wska\u017anik, kt\u00f3ry m\u00f3wi: \"Hej, tu chodzi o ten konkretny obiekt\". Dzi\u0119ki temu pies wie, \u017ce <code>self.imie</code> to jego imi\u0119, a nie jakie\u015b przypadkowe imi\u0119.</li> </ul>"},{"location":"python/zajecia04/#klasy-i-obiekty-co-dalej","title":"Klasy i obiekty \u2013 co dalej? \ud83d\ude80","text":"<p>Klasy to fundament programowania obiektowego (OOP), kt\u00f3re pozwala tworzy\u0107 bardziej z\u0142o\u017cone i uporz\u0105dkowane programy. Obiekty na podstawie klas mog\u0105 mie\u0107 r\u00f3\u017cne w\u0142a\u015bciwo\u015bci i metody, dzi\u0119ki czemu programy staj\u0105 si\u0119 modularne i \u0142atwiejsze do zarz\u0105dzania. Na pocz\u0105tku brzmi to troch\u0119 skomplikowanie, ale jak zaczniesz bawi\u0107 si\u0119 klasami, odkryjesz, \u017ce s\u0105 naprawd\u0119 pot\u0119\u017cnym narz\u0119dziem!</p>"},{"location":"python/zajecia04/#podsumowanie","title":"Podsumowanie","text":"<ul> <li>Funkcje to jak przepisy na ma\u0142e, powtarzalne zadania.</li> <li>Klasy to plany budowy obiekt\u00f3w, kt\u00f3re maj\u0105 zar\u00f3wno dane, jak i metody.</li> </ul> <p>Teraz masz narz\u0119dzia do tworzenia w\u0142asnych funkcji i klas. Czas na Tw\u00f3j w\u0142asny \u015bwiat Pythona, pe\u0142en szczekaj\u0105cych ps\u00f3w, licz\u0105cych funkcji i innych cud\u00f3w programowania! \ud83d\udc0d\ud83d\ude80</p>"}]}